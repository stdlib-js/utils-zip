// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import r from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";var i=r.isPrimitive,a=t,o=e,l=s,p=n;var m=function(){var r,t,e,s,n,m,d,f,h,u,y,g;for(s={},e=null,r=(t=Array.prototype.slice.call(arguments)).length,y=0;y<r-1;y++)if(!o(t[y]))throw new TypeError(p("invalid argument. Must provide array arguments. Value: `%s`.",t[y]));if(n=t[r-1],!(m=a(n))&&!o(n))throw new TypeError(p("invalid argument. Last argument must be either an array or an options object. Value: `%s`.",n));if(m&&(s=t.pop()),0===(r=t.length))throw new Error("insufficient input arguments. Must provide at least one array.");if(l(s,"trunc")){if(!i(s.trunc))throw new TypeError(p("invalid option. `%s` option must be a boolean. Option: `%s`.","trunc",s.trunc))}else s.trunc=!0;if(l(s,"fill")&&(e=s.fill),l(s,"arrays")){if(!i(s.arrays))throw new TypeError(p("invalid option. `%s` option must be a boolean. Option: `%s`.","arrays",s.arrays))}else s.arrays=!1;if(1===r&&s.arrays&&(r=(t=t[0]).length),d=t[0].length,s.trunc)for(y=0;y<r;y++)(u=t[y].length)<d&&(d=u);else for(y=0;y<r;y++)(u=t[y].length)>d&&(d=u);for(h=new Array(d),g=0;g<d;g++){for(f=new Array(r),y=0;y<r;y++)(n=t[y]).length<=g?f[y]=e:f[y]=n[g];h[g]=f}return h};export{m as default};
//# sourceMappingURL=index.mjs.map
