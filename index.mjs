// Copyright (c) 2024 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import{isPrimitive as r}from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@v0.1.1-esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@v0.1.0-esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@v0.1.1-esm/index.mjs";import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@v0.2.0-esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@v0.1.1-esm/index.mjs";function i(){var i,o,a,l,p,m,d,f,h,u,y,g;for(l={},a=null,i=(o=Array.prototype.slice.call(arguments)).length,y=0;y<i-1;y++)if(!e(o[y]))throw new TypeError(n("invalid argument. Must provide array arguments. Value: `%s`.",o[y]));if(p=o[i-1],!(m=t(p))&&!e(p))throw new TypeError(n("invalid argument. Last argument must be either an array or an options object. Value: `%s`.",p));if(m&&(l=o.pop()),0===(i=o.length))throw new Error("insufficient arguments. Must provide at least one array.");if(s(l,"trunc")){if(!r(l.trunc))throw new TypeError(n("invalid option. `%s` option must be a boolean. Option: `%s`.","trunc",l.trunc))}else l.trunc=!0;if(s(l,"fill")&&(a=l.fill),s(l,"arrays")){if(!r(l.arrays))throw new TypeError(n("invalid option. `%s` option must be a boolean. Option: `%s`.","arrays",l.arrays))}else l.arrays=!1;if(1===i&&l.arrays&&(i=(o=o[0]).length),d=o[0].length,l.trunc)for(y=0;y<i;y++)(u=o[y].length)<d&&(d=u);else for(y=0;y<i;y++)(u=o[y].length)>d&&(d=u);for(h=new Array(d),g=0;g<d;g++){for(f=new Array(i),y=0;y<i;y++)(p=o[y]).length<=g?f[y]=a:f[y]=p[g];h[g]=f}return h}export{i as default};
//# sourceMappingURL=index.mjs.map
